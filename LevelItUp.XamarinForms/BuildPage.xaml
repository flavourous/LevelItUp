<?xml version="1.0" encoding="utf-8" ?>
<views:MvxTabbedPage  x:TypeArguments="viewModels:BuildViewModel" 
                      xmlns="http://xamarin.com/schemas/2014/forms"
                      xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                      xmlns:local="clr-namespace:LevelItUp.XamarinForms"
                      xmlns:views="clr-namespace:MvvmCross.Forms.Views;assembly=MvvmCross.Forms"
                      xmlns:mvx="clr-namespace:MvvmCross.Forms.Bindings;assembly=MvvmCross.Forms"
                      xmlns:viewModels="clr-namespace:LevelItUp.Core.ViewModels;assembly=LevelItUp.Core"
                      xmlns:lxf="clr-namespace:LibXF.Controls;assembly=LibXF.Controls"
                      xmlns:blxf="clr-namespace:LibXF.Controls.BindableLayout;assembly=LibXF.Controls"
                      mvx:Bi.nd="Title Format('{1} Build: {0}', Name, Game); ItemsSource ParameterTypes"
                      x:Name="BuildRootView"
                      x:Class="LevelItUp.XamarinForms.BuildPage">
    <views:MvxTabbedPage.Resources>
        <ResourceDictionary>
            <local:UIDispatcher x:Key="UId"/>
            <DataTemplate x:Key="CHead">
                <StackLayout>
                    <Label mvx:Bi.nd="Text Data.Name;IsVisible !Data.Sub;" HorizontalTextAlignment="Center" BackgroundColor="#CCCCCC" Margin="2,0,2,0"/>
                    <Label mvx:Bi.nd="Text Data.Name;IsVisible Data.Sub;" 
                       HeightRequest="120" 
                       WidthRequest="120" 
                       Margin="-46,0,-44,5" 
                       Rotation="-90" 
                       AnchorX="0.5" 
                       AnchorY="0.5"
                       HorizontalTextAlignment="Start"
                       VerticalTextAlignment="Center"/>
                </StackLayout>
            </DataTemplate>
            <!--<DataTemplate  x:Key="MCell">
                <Label mvx:Bi.nd="Text Data.Amount" HorizontalOptions="Center" VerticalOptions="Center" Margin="0,5,0,5" />
            </DataTemplate>-->
            <local:GapTemplateSelector x:Key="MCell">
                <local:GapTemplateSelector.Normal>
                    <DataTemplate>
                        <lxf:TapLabel 
                            mvx:Bi.nd="
                            Text Data.Amount; 
                            BackgroundColor SelectedColor(Data.IsSelected);
                            Command Data.Tap;
                            CommandParameter Data;"
                            Margin="1" VerticalOptions="Fill" HorizontalOptions="Fill" 
                            HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
                    </DataTemplate>
                </local:GapTemplateSelector.Normal>
                <local:GapTemplateSelector.Gap>
                    <DataTemplate>
                        <Grid mvx:Bi.nd="IsVisible Bool(Data.Below)"  VerticalOptions="End" HorizontalOptions="Center" Padding="3,0" BackgroundColor="#CCCCCC" Margin="2,0">
                            <Label HorizontalTextAlignment="Center" Text="Level" />
                        </Grid>
                    </DataTemplate>
                </local:GapTemplateSelector.Gap>    
            </local:GapTemplateSelector>
            <DataTemplate x:Key="RHead">
                <Grid>
                <lxf:TapLabel VerticalOptions="Center" 
                                  HorizontalOptions="Start" 
                                  BackgroundColor="Transparent" 
                                  mvx:Bi.nd="Command Data.StatusTap; CommandParameter Data.Status; Text Data.Icon;"/>
                    <Label mvx:Bi.nd="Text Data.Level" VerticalOptions="Center" HorizontalOptions="End"/>
                </Grid>
            </DataTemplate>
            <local:cib x:Key="cib"/>
            <DataTemplate x:Key="BCell">
                <blxf:BindableStack mvx:Bi.nd="ItemsSource Data" Orientation="Horizontal" >
                    <blxf:BindableStack.ItemTemplate>
                        <DataTemplate>
                            <StackLayout Orientation="Horizontal">
                                <Button mvx:Bi.nd="Text Name; Command Command; IsVisible !Adder;"  BackgroundColor="#00000000" />
                                <Button mvx:Bi.nd="Command Command; IsVisible Adder;" Text="➕"/>
                            </StackLayout>
                        </DataTemplate>
                    </blxf:BindableStack.ItemTemplate>
                </blxf:BindableStack>
            </DataTemplate>
            <ControlTemplate x:Key="SharedPopup" >
                <Frame
                    BindingContext="{TemplateBinding Parent.BindingContext}" 
                    OutlineColor="DarkGray"
                    HorizontalOptions="Center" 
                    VerticalOptions="Center" 
                    MinimumHeightRequest="150"
                    MinimumWidthRequest="400"
                    BackgroundColor="#FFFFFF"
                    mvx:Bi.nd="IsVisible Bool(StatusModal)"
                    >
                    <StackLayout>
                        <Label Margin="20,5" mvx:Bi.nd="Text StatusModal"/>
                        <Button mvx:Bi.nd="Command ClosePopup;" Margin="20,0,20,5" HorizontalOptions="Center" Text="Close"/>
                    </StackLayout>
                </Frame>
            </ControlTemplate>
        </ResourceDictionary>
    </views:MvxTabbedPage.Resources>
    <views:MvxTabbedPage.ItemTemplate>
        <local:ParamTemplateSelector>
            <local:ParamTemplateSelector.Multi>
                <DataTemplate>
                    <ContentPage mvx:Bi.nd="Title Name">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <blxf:BindableGrid mvx:Bi.nd="ItemsSource Cells; RowHeaders RHeaders; ColumnHeaders CHeaders;" 
                                          FrozenHeaders="True" 
                                          RowHeadersTemplate="{StaticResource RHead}"
                                          ColumnHeadersTemplate="{StaticResource CHead}"
                                          ItemTemplate="{StaticResource MCell}"
                                          CellInfo="{StaticResource cib}"
                                          RenderTaskFailure="MultiRenderFailure"
                                          UIDispatcher="{StaticResource UId}"/>
                            <StackLayout Orientation="Horizontal" Grid.Row="1" HorizontalOptions="Start">
                                <Label Text="Chain" VerticalOptions="Center"/>
                                <Switch mvx:Bi.nd="IsToggled ChainChange" />
                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Grid.Row="1" HorizontalOptions="End">
                                <Button mvx:Bi.nd="Command Decrease; IsEnabled CanDecrease" Text="➖" />
                                <Button mvx:Bi.nd="Command Increase; IsEnabled CanIncrease" Text="➕" />
                            </StackLayout>
                            <TemplatedView ControlTemplate="{StaticResource SharedPopup}" Grid.RowSpan="2"/>
                        </Grid>
                    </ContentPage>
                </DataTemplate>
            </local:ParamTemplateSelector.Multi>
            <local:ParamTemplateSelector.Binary>
                <DataTemplate>
                    <ContentPage mvx:Bi.nd="Title Name">
                        <Grid>
                            <blxf:BindableGrid mvx:Bi.nd="ItemsSource Cells; RowHeaders RHeaders;" 
                                      FrozenHeaders="True" 
                                      RowHeadersTemplate="{StaticResource RHead}"
                                      ItemTemplate="{StaticResource BCell}"
                                      UIDispatcher="{StaticResource UId}"/>
                            <TemplatedView ControlTemplate="{StaticResource SharedPopup}"/>
                        </Grid>
                    </ContentPage>
                </DataTemplate>
            </local:ParamTemplateSelector.Binary>
        </local:ParamTemplateSelector>
    </views:MvxTabbedPage.ItemTemplate>
</views:MvxTabbedPage>